**************************

05/12/2020

B(15-20)_inA(250-350)_Directed_All_N3.txt, B(15-20)_inA(250-350)_UnDirected_All_N3.txt, B(25-35)_inA(2500-3500)_Directed_All_N4.txt, B(19-26)_inA(500-1350)_Directed_All_N5.txt 
contains results how the function
int SubGraphsInscribed (std::vector <int> A, std::vector <int> B, std::unordered_set<std::vector <int>, VectorIntHash> & Result, bool directed = true, bool InscribedOnly = true, const bool PreThinning=true, const unsigned int HowManySubgraphs = 0)
finds in the graph A ALL subgraphs that are isomorphic to graph B.

First in these files graphs A and B are given (edge list format). 

They are considered as directed or undirected as it declared in filename (note that for undirected graphs function will works much slower).

Below one may find how many subgraphs in the A were found.

Below these subgraphs are given. Every of them is marked with "G1: " as header - don't pay attention for that.

Format of filename
B(15-20)_inA(250-350)_Directed_All_N3 means:
Graph B has 15 vertices and 20 edges.
Graph A has 250 vertices and 350 edges.
Both are directed.
N3 means that it is for the 3rd dataset.

Working time:
B(15-20)_inA(250-350)_Directed_All_N3 ~ 3 sec, 4536 graphs found
B(25-35)_inA(2500-3500)_Directed_All_N4 ~ 1 min 40 sec, 82546 graphs found
B(19-26)_inA(500-1350)_Directed_All_N5 ~ 20 sec, 19071 graphs found


B(15-20)_inA(250-350)_UnDirected_All_N3 ~ 5 min, 69572 graphs found


Note. Working time rather depends on input data. If A and B has much simular segments it will works very-very-very long. 
But if no - much faster. For example if they have a cycle with one edge having multiplicity = 3, etc.


**************************

05/12/2020

B_inA_Directed_All_N2.txt and B_inA_UnDirected_All_N2.txt contains results how the function
int SubGraphsInscribed (std::vector <int> A, std::vector <int> B, std::unordered_set<std::vector <int>, VectorIntHash> & Result, bool directed = true, bool InscribedOnly = true, const bool PreThinning=true, const unsigned int HowManySubgraphs = 0)
finds in the graph A ALL subgraphs that are isomorphic to graph B.

First in these files graphs A and B are given (edge list format).

Below one may find how many subgraphs in the A were found: i.e. 8 items for the case we consider A and B as directed and 24 items for the case we consider them as undirected.

Below these subgraphs are given. Every of them is marked with "G1: " as header - don't pay attention for that.

Working time - a few seconds

**************************

26/04/2020

B_inA_UnDirected_InscribedOnly_N1.txt and B_inA_Directed_InscribedOnly_N1.txt contains results how the function 
int SubGraphsInscribed (std::vector <int> A, std::vector <int> B, std::set<std::vector <int>> & Result, const bool directed = true) 
finds in the graph A all subgraphs that are isomorphic to graph B and "inscribed" to A.

First in these files graphs A and B are given (edge list format).

Below one may find how many subgraphs in the A were found: i.e. 36 items for the case we consider A and B as directed and 216 items for the case we consider them as undirected.

Below these subgraphs are given. Every of them is marked with "G1: " as header - don't pay attention for that.


****************************